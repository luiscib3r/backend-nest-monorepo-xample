version: "3.8"
services:
  nestjs-monorepo-xample:
    container_name: ${APPLICATION_NAME}
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - ../..:/workspaces:cached
    command:
      sleep infinity

      # Runs app on the same network as the database container, allows "forwardPorts" in devcontainer.json function.
    network_mode: service:postgres

    environment:
      - APPLICATION_NAME=${APPLICATION_NAME}
      - SERVICE_PORT=${SERVICE_PORT}
      - SERVICE_HOST=${SERVICE_HOST}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_HOST_NAME=${POSTGRES_HOST_NAME}
      - POSTGRES_DB_NAME=${POSTGRES_DB_NAME}
      - POSTGRES_DB_NAME_XAMPLE=${POSTGRES_DB_NAME_XAMPLE}
      - DB_PATH=${DB_PATH}

  postgres:
    container_name: ${POSTGRES_HOST_NAME}
    image: postgres:16
    restart: unless-stopped
    environment:
      - POSTGRES_DB=${POSTGRES_DB_NAME}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_HOST=${POSTGRES_HOST}
    volumes:
      - postgres-data:/var/lib/postgresql/data
    ports:
      - ${POSTGRES_PORT}:${POSTGRES_PORT}

  adminer:
    container_name: databaseAdmin
    image: adminer
    restart: unless-stopped
    ports:
      - 8081:8080
volumes:
  postgres-data:
